{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./todo.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./progress-bar/progress-bar.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./todo-item/todo-item.component\";\n\nfunction AppComponent_app_todo_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-todo-item\", 6);\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", todo_r1);\n  }\n}\n\nexport class AppComponent {\n  constructor(todoService) {\n    this.tasks = [];\n    this.todos$ = todoService.getAll();\n    todoService.getAll().subscribe(res => this.tasks = res);\n  }\n\n  searchTodos(searchText) {\n    if (!searchText) {\n      this.todos$ = this.tasks;\n    }\n\n    let matched = this.tasks.filter(todo => todo.task.search(new RegExp(searchText, 'i')));\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 10,\n  vars: 4,\n  consts: [[1, \"title\"], [1, \"list\"], [\"for\", \"search\"], [\"id\", \"search\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"id\", \"progress-bar\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \" A list of TODOs \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Search...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.searchText = $event;\n      })(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_6_listener() {\n        return ctx.searchTodos(ctx.searchText);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"app-progress-bar\", 4);\n      i0.ɵɵtemplate(8, AppComponent_app_todo_item_8_Template, 1, 1, \"app-todo-item\", 5);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 2, ctx.todos$));\n    }\n  },\n  directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ProgressBarComponent, i4.NgForOf, i5.TodoItemComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\".title[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n  width: 1000px;\\n  margin: auto;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0 0;\\n  box-sizing: border-box;\\n}\\n\\n#progress-bar-hidden[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtBQUNGIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxpc3Qge1xuICB3aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbmlucHV0W3R5cGU9dGV4dF0ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAyMHB4O1xuICBtYXJnaW46IDhweCAwIDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiNwcm9ncmVzcy1iYXItaGlkZGVue1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"]\n}); //Implement loading\n\nngAfterViewInit();\n{\n  let element = document.getElementById('progress-bar'); // console.log(element)\n\n  if (element != undefined) {\n    setTimeout(() => {\n      element.id = 'progress-bar-hidden';\n    }, 2000);\n  }\n}","map":{"version":3,"sources":["/Users/sakshamgupta/Desktop/todo-list/todo-list-frontend/src/app/app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component } from '@angular/core';\nimport {Todo, TodoService} from \"./todo.service\";\nimport {Observable} from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"title\">\n      <h1>\n        A list of TODOs\n      </h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input id=\"search\" type=\"text\" [(ngModel)]=\"searchText\" (keyup.enter)=\"searchTodos(searchText)\"/>\n      <app-progress-bar id=\"progress-bar\"></app-progress-bar>\n      <app-todo-item *ngFor=\"let todo of todos$ | async\" [item]=\"todo\"></app-todo-item>\n    </div>\n  `,\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n\n  searchText: any;\n  readonly todos$: Observable<Todo[]>;\n  tasks: Todo[] = [];\n  \n  constructor(todoService: TodoService) {\n    this.todos$ = todoService.getAll();\n    todoService.getAll().subscribe(res => this.tasks = res);\n  }\n\n  searchTodos(searchText: string) {\n    if (!searchText) {\n      this.todos$ = this.tasks;\n    }\n    let matched = this.tasks.filter(todo => todo.task.search(new RegExp(searchText, 'i')))\n    }\n  }\n\n\n//Implement loading\n\n  ngAfterViewInit() {\n    let element = document.getElementById('progress-bar')\n    // console.log(element)\n    if(element != undefined){\n      setTimeout(() => {\n        element!.id = 'progress-bar-hidden'\n      }, 2_000)   \n    }\n}\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}