{"ast":null,"code":"import { Observable, of } from \"rxjs\";\nimport { delay, map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nlet mockData = [{\n  id: 0,\n  task: 'Implement loading - frontend only',\n  priority: 1\n}, {\n  id: 1,\n  task: 'Implement search - frontend only',\n  priority: 2\n}, {\n  id: 2,\n  task: 'Implement delete on click - frontend only',\n  priority: 1\n}, {\n  id: 3,\n  task: 'Replace mock service by integrating backend',\n  priority: 3\n}];\n\nfunction removeFromMockData(id) {\n  mockData = mockData.filter(todo => todo.id !== id);\n}\n\nexport let TodoService = /*#__PURE__*/(() => {\n  class TodoService {\n    getAll() {\n      return of(undefined).pipe(delay(2000), map(() => mockData));\n    }\n\n    remove(id) {\n      return new Observable(observer => {\n        setTimeout(() => {\n          if (Math.random() < .8) {\n            removeFromMockData(id);\n            observer.next();\n          } else {\n            observer.error('Failed');\n          }\n\n          observer.complete();\n        }, 2000);\n      });\n    }\n\n  }\n\n  TodoService.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)();\n  };\n\n  TodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: 'root'\n  });\n  return TodoService;\n})();","map":null,"metadata":{},"sourceType":"module"}