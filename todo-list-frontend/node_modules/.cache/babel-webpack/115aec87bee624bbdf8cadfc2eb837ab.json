{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./todo.service\";\nimport * as i2 from \"./progress-bar/progress-bar.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./todo-item/todo-item.component\";\nconst _c0 = [\"progressBar\"];\n\nfunction AppComponent_app_todo_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-todo-item\", 6);\n  }\n\n  if (rf & 2) {\n    const todo_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", todo_r2);\n  }\n}\n\nexport class AppComponent {\n  constructor(todoService) {\n    this.todos$ = todoService.getAll();\n  }\n\n  ngAfterViewInit() {\n    console.log(this.myDiv);\n\n    if (this.myDiv) {\n      setTimeout(() => {\n        this.myDiv.nativeElement.className = 'progress-bar-hidden';\n      }, 2000);\n    }\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myDiv = _t.first);\n    }\n  },\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"title\"], [1, \"list\"], [\"for\", \"search\"], [\"id\", \"search\", \"type\", \"text\"], [\"progressBar\", \"\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \" A list of TODOs \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Search...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelement(7, \"app-progress-bar\", null, 4);\n      i0.ɵɵtemplate(9, AppComponent_app_todo_item_9_Template, 1, 1, \"app-todo-item\", 5);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 1, ctx.todos$));\n    }\n  },\n  directives: [i2.ProgressBarComponent, i3.NgForOf, i4.TodoItemComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\".title[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n  width: 1000px;\\n  margin: auto;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0 0;\\n  box-sizing: border-box;\\n}\\n\\n.progress-bar-hidden[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtBQUNGIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxpc3Qge1xuICB3aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbmlucHV0W3R5cGU9dGV4dF0ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAyMHB4O1xuICBtYXJnaW46IDhweCAwIDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5wcm9ncmVzcy1iYXItaGlkZGVue1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"]\n});","map":{"version":3,"sources":["/Users/sakshamgupta/Desktop/todo-list/todo-list-frontend/src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;AAgBM,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA;;;;;AAAmD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA;;;;AAKzD,OAAM,MAAO,YAAP,CAAmB;AAKvB,EAAA,WAAA,CAAY,WAAZ,EAAoC;AAClC,SAAK,MAAL,GAAc,WAAW,CAAC,MAAZ,EAAd;AACD;;AAED,EAAA,eAAe,GAAA;AACb,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;;AACA,QAAG,KAAK,KAAR,EAAc;AACZ,MAAA,UAAU,CAAC,MAAK;AACd,aAAK,KAAL,CAAY,aAAZ,CAA0B,SAA1B,GAAsC,qBAAtC;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACJ;;AAhBwB;;;mBAAZ,Y,EAAY,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;QAAZ,Y;AAAY,EAAA,SAAA,EAAA,CAAA,CAAA,UAAA,CAAA,C;AAAA,EAAA,SAAA,EAAA,SAAA,kBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;;;AAdrB,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACE,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mBAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAAoB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAC7B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA;;AACF,MAAA,EAAA,CAAA,YAAA;;;;AADkC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA","sourcesContent":["import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {Todo, TodoService} from \"./todo.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"title\">\n      <h1>\n        A list of TODOs\n      </h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input id=\"search\" type=\"text\">\n      <app-progress-bar #progressBar></app-progress-bar>\n      <app-todo-item *ngFor=\"let todo of todos$ | async\" [item]=\"todo\"></app-todo-item>\n    </div>\n  `,\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n\n  readonly todos$: Observable<Todo[]>;\n  @ViewChild('progressBar', { static: false }) myDiv: ElementRef | undefined;\n\n  constructor(todoService: TodoService) {\n    this.todos$ = todoService.getAll();\n  }\n\n  ngAfterViewInit() {\n    console.log(this.myDiv)\n    if(this.myDiv){\n      setTimeout(() => {\n        this.myDiv!.nativeElement.className = 'progress-bar-hidden';\n      }, 2_000)   \n    }\n}\n\n  // remove_progress_bar(): Observable<void> {\n  //   return new Observable<void>(observer => {\n  //     setTimeout(() => {\n  //       document.getElementById('progress-bar').className = 'progress-bar-hidden';\n  //     }, 2_000)\n  //   })\n  //  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}